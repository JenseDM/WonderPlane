@page "/register"

<PageTitle>Registro</PageTitle>

@using WonderPlane.Shared;
@using WonderPlane.Client.Servicios;
@using System.ComponentModel.DataAnnotations;
@using MudBlazor;

@inject IUserService UserService;
@inject NavigationManager navigation;
@inject HttpClient Http;
@inject CountryService CountryService;
@inject ISnackbar Snackbar;
@inject ImageUploadService ImageUploadService

<main class="main-container poppins-light">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320">
        <path fill="#fff" fill-opacity="1" d="M0,96L30,106.7C60,117,120,139,180,165.3C240,192,300,224,360,218.7C420,213,480,171,540,144C600,117,660,107,720,133.3C780,160,840,224,900,250.7C960,277,1020,267,1080,240C1140,213,1200,171,1260,160C1320,149,1380,171,1410,181.3L1440,192L1440,0L1410,0C1380,0,1320,0,1260,0C1200,0,1140,0,1080,0C1020,0,960,0,900,0C840,0,780,0,720,0C660,0,600,0,540,0C480,0,420,0,360,0C300,0,240,0,180,0C120,0,60,0,30,0L0,0Z"></path>
    </svg>
    <section class="register-container">
        <EditForm Model="newUser" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />

            <h1>¡Únete <span style="color:dodgerblue;">ahora</span>!</h1>

            <div class="form-container">

                <div class="form-container-left">
                    <div class="input">
                        <label class="form-label">Nombres</label>
                        <InputText class="form-control" @bind-Value="newUser.Name"></InputText>
                        <span class="small-validation-message"><ValidationMessage For="@(() => newUser.Name)"></ValidationMessage></span>
                    </div>

                    <div class="input">
                        <label class="form-label">Apellidos</label>
                        <InputText class="form-control" @bind-Value="newUser.LastName"></InputText>
                        <span class="small-validation-message"><ValidationMessage For="@(() => newUser.LastName)"></ValidationMessage></span>
                    </div>

                    <div class="input">
                        <label class="form-label">Numero de telefono</label>
                        <InputText class="form-control" @bind-Value="newUser.PhoneNumber"></InputText>
                        <span class="small-validation-message"><ValidationMessage For="@(() => newUser.PhoneNumber)"></ValidationMessage></span>
                    </div>

                    <div class="input">
                        <label class="form-label">Genero</label>
                        <select class="form-control" @bind="newUser.Gender">
                            <option value="Male">Masculino</option>
                            <option value="Female">Femenino</option>
                            <option value="Prefiero no decirlo">Prefiero no decirlo</option>
                            <option value="Other">Otro</option>
                        </select>
                        <span class="small-validation-message"><ValidationMessage For="@(() => newUser.Gender)"></ValidationMessage></span>
                    </div>

                    <div class="input">
                        <label class="form-label">Dirección</label>
                        <InputText class="form-control" @bind-Value="newUser.Address" ></InputText>
                        <span class="small-validation-message"><ValidationMessage For="@(() => newUser.Address)"></ValidationMessage></span>
                    </div>

                    <div class="input">
                        <label class="form-label">Lugar de nacimiento</label>
                        <select class="form-control" @bind="newUser.Country">
                            <option value="">Seleccione un país</option>
                            @foreach (var country in countries)
                            {
                                <option value="@country">@country</option>
                            }
                        </select>
                        <span class="small-validation-message"><ValidationMessage For="@(() => newUser.Country)"></ValidationMessage></span>
                    </div>
                </div>

                <div class="form-container-right">

                    <div class="input">
                        <label class="form-label">Documento</label>
                        <InputText class="form-control" @bind-Value="newUser.Document"></InputText>
                        <span class="small-validation-message"><ValidationMessage For="@(() => newUser.Document)"></ValidationMessage></span>
                    </div>

                    <div class="input">
                        <label class="form-label">Fecha de nacimiento</label>
                        <input type="date" min="1940-01-01" max="2006-12-31" class="form-control" @bind-value="newUser.BirthDate" />
                        <span class="small-validation-message"><ValidationMessage For="@(() => newUser.BirthDate)"></ValidationMessage></span>
                    </div>

                    <div class="input">
                        <label class="form-label">Email</label>
                        <InputText class="form-control" @bind-Value="newUser.Email" Placeholder="ejemplo@dominio.com"></InputText>
                        <span class="small-validation-message"><ValidationMessage For="@(() => newUser.Email)"></ValidationMessage></span>
                    </div>

                    <div class="input">
                        <label class="form-label">Usuario</label>
                        <InputText class="form-control" @bind-Value="newUser.UserName"></InputText>
                        <span class="small-validation-message"><ValidationMessage For="@(() => newUser.UserName)"></ValidationMessage></span>
                    </div>

                    <div class="input">
                        <label class="form-label">Contraseña</label>
                        <input type="password" class="form-control" @bind-value="newUser.Password" />
                        <span class="small-validation-message"><ValidationMessage For="@(() => newUser.Password)"></ValidationMessage></span>
                    </div>

                    <div class="input">
                        <label class="form-label">Confirmar Contraseña</label>
                        <input type="password" class="form-control" @bind-value="newUser.ConfirmPassword" />
                        <span class="small-validation-message"><ValidationMessage For="@(() => newUser.ConfirmPassword)"></ValidationMessage></span>
                    </div>
                </div>

            </div>

            <div class="form-button">
                <div class="input">
                    <MudFileUpload T="IBrowserFile" FilesChanged="OnFileSelected">
                        <ActivatorContent>
                            <MudButton Variant="Variant.Outlined" Color="Color.Info">
                                Subir imagen
                            </MudButton>
                        </ActivatorContent>
                    </MudFileUpload>

                    @if (selectedFile != null)
                    {
                        <p>@selectedFile.Name</p>
                    }
                    else
                    {
                        <p>No seleccionado</p>
                    }

                </div>
                <button class="submit-button" type="submit">Registrarme</button>
                <ul>
                    <li>
                        <a>¿Ya tienes una cuenta?</a>
                        <a class="ingreso" href="/login"> Ingresa aqui</a>
                    </li>
                </ul>
            </div>
        </EditForm>
    </section>

    <svg class="svg-bottom" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320">
        <path fill="#fff" fill-opacity="1" d="M0,96L30,106.7C60,117,120,139,180,165.3C240,192,300,224,360,218.7C420,213,480,171,540,144C600,117,660,107,720,133.3C780,160,840,224,900,250.7C960,277,1020,267,1080,240C1140,213,1200,171,1260,160C1320,149,1380,171,1410,181.3L1440,192L1440,320L1410,320C1380,320,1320,320,1260,320C1200,320,1140,320,1080,320C1020,320,960,320,900,320C840,320,780,320,720,320C660,320,600,320,540,320C480,320,420,320,360,320C300,320,240,320,180,320C120,320,60,320,30,320L0,320Z"></path>
    </svg>
    
</main>

@code {

    private List<string> countries = new List<string>();
    private IBrowserFile? selectedFile;

    UserRegisterDto newUser = new UserRegisterDto
    {
        UserName = string.Empty,
        Document = string.Empty,
        Name = string.Empty,
        LastName = string.Empty,
        BirthDate = DateTime.Now,
        Email = string.Empty,
        Address = string.Empty,
        Country = string.Empty,
        Password = string.Empty,
        ConfirmPassword = string.Empty,
        Gender = string.Empty,
        PhoneNumber = string.Empty,
        Image = string.Empty
    };

   
    protected override async Task OnInitializedAsync()
    {
        countries = await CountryService.GetCountriesAsync();
    }

    private async Task OnValidSubmit()
    {
        try
        {
            Snackbar.Add("Procesando registro...", Severity.Info);
            
            if (selectedFile != null)
            {
                var imageUrl = await ImageUploadService.UploadImage(selectedFile);
                Console.WriteLine(imageUrl);

                if (!string.IsNullOrEmpty(imageUrl))
                {
                    newUser.Image = imageUrl; 
                    Snackbar.Add("Imagen subida correctamente.", Severity.Info);
                }
                else
                {
                    Snackbar.Add("Error al subir la imagen.", Severity.Error);
                    return; 
                }
            }

            await UserService.CreateUser(newUser);
            Snackbar.Clear(); 
            Snackbar.Add("Registro realizado con éxito.", Severity.Success);
            navigation.NavigateTo("/login");
        }
        catch (ApplicationException ex)
        {
            Snackbar.Add($"Error al registrar usuario: {ex.Message}", Severity.Error);
        }
    }

    // Manejo de archivos
    IList<IBrowserFile> _files = new List<IBrowserFile>();

    private void UploadFiles(IBrowserFile file)
    {
        _files.Add(file);
    }

    private void OnFileSelected(IBrowserFile file)
    { 
        if(file != null)
        {
            selectedFile = file; 
            Snackbar.Add("La imagen se ha cargado correctamente.", Severity.Info);
        }
        else
        {
            Snackbar.Add("Error al cargar la imagen.", Severity.Error);
        }

    }

}